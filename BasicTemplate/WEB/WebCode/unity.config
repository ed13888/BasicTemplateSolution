<?xml version="1.0" encoding="utf-8"?>
<unity  xmlns="http://schemas.microsoft.com/practices/2010/unity">

  <!--<alias alias="singleton" type="Microsoft.Practices.Unity.ContainerControlledLifetimeManager,Microsoft.Practices.Unity" />
  <alias alias="external"  type="Microsoft.Practices.Unity.ExternallyControlledLifeManager,Microsoft.Practices.Unity" />-->

  <!--定义类型别名-->
  <!--<aliases>-->
    <!--<add alias="IPerson" type="MVC_Test.Model.IPerson,MVC_Test.Model" />
    <add alias="Student" type="MVC_Test.Model.Student,MVC_Test.Model" />-->
    <!--<add alias="IUserBll" type="MVC_Test.Model.IUserBll,MVC_Test.Model" />
    <add alias="UserBll" type="MVC_Test.Model.UserBll,MVC_Test.Model" />
    <add alias="IUserDal" type="MVC_Test.Model.IUserDal,MVC_Test.Model" />
    <add alias="UserDal" type="MVC_Test.Model.UserDal,MVC_Test.Model" />-->
  <!--</aliases>-->
  <!--容器-->
  <container>
    <!--映射关系-->
    <!--<register type="MVC_Test.Model.IUserBll,MVC_Test.Model" mapTo="MVC_Test.Model.UserBll,MVC_Test.Model" name="UserBll">
      <property name="UserDal">
        <dependency type="MVC_Test.Model.UserDal,MVC_Test.Model" />
      </property>
    </register>
    <register type="MVC_Test.Model.IUserDal,MVC_Test.Model" mapTo="MVC_Test.Model.UserDal,MVC_Test.Model" name="UserDal">
      <constructor>
        <param name="connectionString" parameterType="string">
          <value value="AdventureWorks"/>
        </param>
        <param name="logger" parameterType="ILogger">
          <dependency />
        </param>
      </constructor>
      <property name="Logger" propertyType="ILogger" />
      <method name="Initialize">
        <param name="connectionString" parameterType="string">
          <value value="contoso"/>
        </param>
        <param name="dataService" parameterType="IMyService">
          <dependency />
        </param>
      </method>
    </register>
    <register type="MVC_Test.Model.IUserDal,MVC_Test.Model" mapTo="MVC_Test.Model.UserDal,MVC_Test.Model" name="UserDal"></register>-->

  </container>
</unity>
